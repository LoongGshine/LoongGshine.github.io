<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>LKI - 标签 - Xshine&#39;s Blog</title>
    <link>https://loonggshine.github.io/tags/lki/</link>
    <description>LKI - 标签 - Xshine&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (Xshine)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (Xshine)</webMaster><lastBuildDate>Sun, 31 Dec 2023 15:43:50 &#43;0800</lastBuildDate><atom:link href="https://loonggshine.github.io/tags/lki/" rel="self" type="application/rss+xml" /><item>
  <title>解读计算机编码</title>
  <link>https://loonggshine.github.io/binary-representation/</link>
  <pubDate>Sun, 31 Dec 2023 15:43:50 &#43;0800</pubDate>
  <author>Xshine</author>
  <guid>https://loonggshine.github.io/binary-representation/</guid>
  <description><![CDATA[<p>人們對數學的加減運算可輕易在腦中辨識符號並理解其結果，但電腦做任何事都受限於實體資料儲存及操作方式，換言之，電腦硬體實際只認得 0 和 1，卻不知道符號 + 和 - 在數學及應用場域的意義，於是工程人員引入「補數」以便在二進位系統中，表達人們認知上的正負數。但您有沒有想過，為何「二補數」(2’s complement) 被電腦廣泛採用呢？背後的設計考量又是什麼？本文嘗試從數學觀點去解讀編碼背後的原理，並佐以資訊安全及程式碼最佳化的考量，探討二補數這樣的編碼對於程式設計有何關鍵影響。</p>]]></description>
</item>
<item>
  <title>Rust - 进行中的未来</title>
  <link>https://loonggshine.github.io/rust-intro/</link>
  <pubDate>Thu, 28 Dec 2023 20:18:03 &#43;0800</pubDate>
  <author>Xshine</author>
  <guid>https://loonggshine.github.io/rust-intro/</guid>
  <description><![CDATA[Rust in 100 Seconds &#x2705; 观看短片：Rust in 100 Seconds 了解 Rust，初步了解其安全性原理 所有权 (ownership) 借用 (borrow) 警告 0:55 This is wrong, value mutability doesn&rsquo;t have anything to do with the value being stored on the stack or the heap (and the example let mut]]></description>
</item>
</channel>
</rss>
