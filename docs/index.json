[{"categories":["LKI"],"content":"Rust in 100 Seconds 观看短片：Rust in 100 Seconds ✅，了解 Rust，初步了解其安全性原理：所有权（ownership），借用（borrow）等机制。 ","date":"2023-12-28","objectID":"/rust-intro/:1:0","tags":["LKI, Rust"],"title":"Rust - 进行中的未来","uri":"/rust-intro/"},{"categories":["LKI"],"content":"⚠️ 0:55 This is wrong, value mutability doesn’t have anything to do with the value being stored on the stack or the heap (and the example let mut hello = \"hi mom\" will be stored on the stack since it’s type is \u0026'static str), it depends on the type of the value (if it’s Sized or not). ","date":"2023-12-28","objectID":"/rust-intro/:2:0","tags":["LKI, Rust"],"title":"Rust - 进行中的未来","uri":"/rust-intro/"},{"categories":["LKI"],"content":"The adoption of Rust in Business (2022) 阅读报告 The adoption of Rust in Business (2022) ❌。 ","date":"2023-12-28","objectID":"/rust-intro/:3:0","tags":["LKI, Rust"],"title":"Rust - 进行中的未来","uri":"/rust-intro/"},{"categories":["Git"],"content":"教学影片：Git 中文教学 ","date":"2023-12-27","objectID":"/git/:0:0","tags":["Git"],"title":"Git 学习记录","uri":"/git/"},{"categories":["Git"],"content":"安装与设定 观看影片[][] ✅，完成常用的 Git 设置： 设置 Git 的编辑器为 vim，主要用于 commit 时的编辑： $ git config --global core.editor vim 设置 Git 的合并解决冲突工具为 vimdiff： $ git config --global merge.tool vimdiff 启用 Git 命令行界面的颜色显示： $ git config --global color.ui true 设置常用命令的别名： $ git config --global alias.st status $ git config --global alias.ch checkout $ git config --global alias.rst reset HEAD ","date":"2023-12-27","objectID":"/git/:1:0","tags":["Git"],"title":"Git 学习记录","uri":"/git/"},{"categories":["Git"],"content":"Add 和 Commit ","date":"2023-12-27","objectID":"/git/:2:0","tags":["Git"],"title":"Git 学习记录","uri":"/git/"},{"categories":["Git"],"content":"指定 Commit Hash Value: Every commit has a unique hash value. Calculate by SHA1 Hash value can indicate a commit absolutely. 可以通过 git log 来查看 commit 记录以及对应的 Hash 值。事实上，这个命令十分灵活，举个例子： git log 4a6ebc -n1 这个命令的效果是从 Hash 值为 4a6bc 的 commit 开始打印 1 条 commit 记录（没错，对应的是 -n1），因为 Git 十分聪明，所以 commit 对应的 Hash 值只需前 6 位即可（因为这样已经几乎不会发生 Hash 冲突）。 ","date":"2023-12-27","objectID":"/git/:3:0","tags":["Git"],"title":"Git 学习记录","uri":"/git/"},{"categories":["Linux"],"content":"Ubuntu 网络和输入法 ","date":"2023-12-27","objectID":"/ubuntu/:0:0","tags":["Linux","Ubuntu"],"title":"Ubuntu 22.04 配置","uri":"/ubuntu/"},{"categories":["Linux"],"content":"网络代理 根据项目 clash-for-linux-backup 来配置 Ubuntu 的网络代理。 $ git clone https://github.com/Elegybackup/clash-for-linux-backup.git clash-for-linux 过程当中可能需要安装 curl 和 net-tools，根据提示进行安装即可： sudo apt install curl sudo apt install net-tools 安装并启动完成后，可以通过 localhost:9090/ui 来访问 Dashboard。 启动代理： $ cd clash-for-linux $ sudo bash start.sh $ source /etc/profile.d/clash.sh $ proxy_on 关闭代理： $ cd clash-for-linux $ sudo bash shutdown.sh $ proxy_off ","date":"2023-12-27","objectID":"/ubuntu/:1:0","tags":["Linux","Ubuntu"],"title":"Ubuntu 22.04 配置","uri":"/ubuntu/"},{"categories":["Linux"],"content":"搜狗输入法 根据 搜狗输入法 Linux 安装指导 来安装搜狗输入法。 无需卸载系统 ibus 输入法框架。 通过 Ctrl + space 唤醒搜狗输入法。 ","date":"2023-12-27","objectID":"/ubuntu/:2:0","tags":["Linux","Ubuntu"],"title":"Ubuntu 22.04 配置","uri":"/ubuntu/"},{"categories":["Mathematics"],"content":" 中大數學系開放式課程 台大齐震宇 - 数学潜水艇、微积分、分析 台大谢铭伦 - 线性代数 ","date":"2023-12-23","objectID":"/math/:0:0","tags":["Mathematics","Math"],"title":"Math 数学开放式课程学习导航","uri":"/math/"},{"categories":["draft"],"content":"博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 ","date":"2023-12-23","objectID":"/first_post/:0:0","tags":["draft"],"title":"First_post","uri":"/first_post/"},{"categories":["draft"],"content":"数学公式 行内公式：$N(b,d)=(b-1)M$ 公式块： $$\r\\int_{a}^{b}x(t)dt =\r\\dfrac{b - a}{N} \\\\\r=\\sum_{k=1}^{N}x(t_k)\\cdot\\dfrac{b-a}{N}\r$$\r$$\r\\begin{aligned}\r\\int_{a}^{b}x(t)dt \u0026=\r\\dfrac{b - a}{N} \\\\\r\u0026=\\sum_{k=1}^{N}x(t_k)\\cdot\\dfrac{b-a}{N} \\\\\r\\end{aligned}\r$$\r","date":"2023-12-23","objectID":"/first_post/:1:0","tags":["draft"],"title":"First_post","uri":"/first_post/"},{"categories":["draft"],"content":"代码块 let i: i32 = 13; let v = vec![1, 2, 3, 4, 5, 65]; for x in v.iter() { println!(\"{}\", x); } typedef struct Block_t { int head; int data; } Block_t; ","date":"2023-12-23","objectID":"/first_post/:2:0","tags":["draft"],"title":"First_post","uri":"/first_post/"},{"categories":["draft"],"content":"References FixIt 快速上手 使用 Hugo + Github 搭建个人博客 Emoji 支持 ","date":"2023-12-23","objectID":"/first_post/:3:0","tags":["draft"],"title":"First_post","uri":"/first_post/"}]